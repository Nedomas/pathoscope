PathoscopeLoader = (->

  server = '<%= SERVER %>'

  init = ->
    loadjQuery()

  loadjQuery = ->
    load('head', 'script', "//ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js", loadHandlebars)

  loadHandlebars = ->
    load('head', 'script', "//cdnjs.cloudflare.com/ajax/libs/handlebars.js/1.3.0/handlebars.js", loadEmber)

  loadEmber = ->
    load('head', 'script', server + "/assets/ember.js?body=1", loadEmberData)

  loadEmberData = ->
    load('head', 'script', "//cdnjs.cloudflare.com/ajax/libs/ember-data.js/1.0.0-beta.6/ember-data.min.js", loadLeanModal)

  loadLeanModal = ->
    load('head', 'script', server + '/assets/jquery.leanModal.min', loadNormalize)

  loadNormalize = ->
    load('head', 'link', server + '/assets/public/normalize.css', loadCSS)

  loadCSS = ->
    load('head', 'link', server + '/assets/public/standalone_app.css', loadTemplates)

  loadTemplates = ->
    templates = [
      'application'
  ***REMOVED***

    $('<section id="pathoscope-container"></div>').app***REMOVED***To('body')
  ***REMOVED*** $('body').app***REMOVED***('<script type="text/x-handlebars" data-template-name="application">' +
  ***REMOVED***   '<h2>Im the content</h2>' +
  ***REMOVED***   '</script>')

    $.each templates, (index, template) ->
      load('head', 'script', server + '/assets/standalone_app/templates/' + template + '.js')

  ***REMOVED*** setTimeout(loadApplication, 5000)
    loadApplication()

  loadApplication = ->
    console.log 'Assets loaded. Loading application'
    load('head', 'script', server + '/assets/standalone_app/app.js')

  load = (place, tag, url, callback) ->
    done = false
    element = document.createElement(tag)

    if tag == 'link'
      element.href = url
      element.rel = "stylesheet"
      element.type = "text/css"
    else
      element.src = url

    element.onload = element.onreadystatechange = ->
      if !done && (!@readyState || @readyState == "loaded" || @readyState == "complete")
        done = true
        callback?()

    document.getElementsByTagName(place)[0].app***REMOVED***Child(element)

  return { init: init, load: loadApplication }
)()

  ***REMOVED*** $.get(server + '/bookmarks/templates').then (templates) ->
  ***REMOVED***   html = $(templates).find('main #pathoscope').clone()
  ***REMOVED***   $('body').app***REMOVED***(html)
  ***REMOVED***   loadApplication()

PathoscopeLoader.init()
